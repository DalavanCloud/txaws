#!/usr/bin/env python
"""
%prog [options]
"""

from twisted.internet import reactor

from txaws.credentials import AWSCredentials
from txaws.script import parse_options
from txaws.service import AWSServiceRegion


def printResults(results):
    print "\nBuckets:"
    for bucket in results:
        print "\t%s (created on %s)" % (bucket.name, bucket.creation_date)
    print "Total buckets: %s\n" % len(list(results))


def printError(error):
    print error.getErrorMessage()
    print error.value
    # XXX we need the s3 error handling!
    import pdb;pdb.set_trace()


def finish(ignore):
    reactor.stop()


options, args = parse_options(__doc__.strip())
creds = AWSCredentials(options.access_key, options.secret_key)
region = AWSServiceRegion(
    creds=creds, region=options.region, s3_endpoint=options.url)
client = region.get_s3_client()

d = client.list_buckets()
d.addCallback(printResults)
d.addErrback(printError)
d.addCallback(finish)
reactor.run()
